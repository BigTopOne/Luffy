apply plugin: 'com.android.application'
apply plugin: 'apk.move.plugin'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.mmc.sample"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.0.0'
//    compile files('libs/MiPush_SDK_Client_3_2_2.jar')
    compile project(':annotation')
}



import com.xixi.plugin.tracking.AutoMethodVisitor
import org.objectweb.asm.AnnotationVisitor
import org.objectweb.asm.MethodVisitor

xiaoqingwa{
    name = "小傻逼"
    //this is the most important part
    matchData = [
            'isAnotation': true, //是否使用注解来找对应方法
            'ClassFilter': [
                    ['ClassName': 'MainActivity', 'InnerClassName': null, 'SuperName': null, 'InterfaceName': null, 'MethodName':'onClick']
            ],
            'MethodVisitor':{
                MethodVisitor methodVisitor, int access, String name, String desc ->
                    MethodVisitor adapter = new AutoMethodVisitor(methodVisitor, access, name, desc) {
                        boolean isAnnotation = false
                        @Override
                        protected void onMethodEnter() {
                            super.onMethodEnter()
                            if (!isAnnotation){
                                return
                            }
                            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/xishuang/plugintest/MainActivity", "notifyInsert", "()V", false)
                            methodVisitor.visitLdcInsn(name)
                            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false)
                            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/xishuang/plugintest/TimeCache", "setStartTime", "(Ljava/lang/String;J)V", false)
                        }

                        @Override
                        protected void onMethodExit(int opcode) {
                            super.onMethodExit(opcode)
                            if (!isAnnotation){
                                return
                            }
                            methodVisitor.visitLdcInsn(name)
                            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false)
                            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/xishuang/plugintest/TimeCache", "setEndTime", "(Ljava/lang/String;J)V", false)
                            methodVisitor.visitLdcInsn("耗时")
                            methodVisitor.visitLdcInsn(name)
                            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/xishuang/plugintest/TimeCache", "getCostTime", "(Ljava/lang/String;)Ljava/lang/String;", false)
                            methodVisitor.visitMethodInsn(INVOKESTATIC, "android/util/Log", "d", "(Ljava/lang/String;Ljava/lang/String;)I", false)
                        }

                        @Override
                        AnnotationVisitor visitAnnotation(String des, boolean visible) {
                            if (des.equals("Lcom/xishuang/annotation/AutoCount;")) {
                                println ":applied XX哈哈" + isAnnotation.toString()
                                isAnnotation = true
                            }
                            return super.visitAnnotation(des, visible)
                        }
                    }
                    return adapter
            }
    ]
}
